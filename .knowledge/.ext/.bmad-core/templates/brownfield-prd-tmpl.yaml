# <!-- Powered by BMAD™ Core -->
template:
  id: brownfield-prd-template-v2
  name: 现有项目增强 PRD
  version: 2.0
  output:
    format: markdown
    filename: docs/prd.md
    title: '{{project_name}} 现有项目增强 PRD'

workflow:
  mode: interactive
  elicitation: advanced-elicitation

sections:
  - id: intro-analysis
    title: 项目分析和背景介绍
    instruction: |
      重要 - 先评估一下范围：

      这个 PRD 是给现有项目做重大增强用的，需要全面规划和多个 story。开始前：

      1. **看看增强复杂度**：如果只是简单的功能添加或 bug 修复，1-2 次开发就能搞定，那就停下来建议："简单变更的话，考虑用 brownfield-create-epic 或 brownfield-create-story 任务和产品负责人一起做。这个完整 PRD 流程是为需要架构规划和多个协调 story 的重大增强设计的。"

      2. **项目上下文**：看看我们是在已加载项目的 IDE 中工作，还是用户需要提供项目信息。如果项目文件可用，分析 docs 文件夹里的现有文档。如果文档不够，建议先跑 document-project 任务。

      3. **深度评估要求**：在提任何建议之前，你必须彻底分析现有项目结构、模式和约束。每个建议都得基于实际项目分析，不能拍脑袋。

      收集现有项目的全面信息。这个部分必须在继续需求之前完成。

      关键：在整个分析过程中，明确向用户确认你的理解。对于你关于现有项目做出的每个假设，问："基于我的分析，我理解 [假设]。这是正确的吗？"

      在用户验证你对现有系统的理解之前，别继续任何建议。
    sections:
      - id: existing-project-overview
        title: 现有项目概览
        instruction: 看看是否已经跑过 document-project 分析。如果是，直接用那个输出，别重新分析。
        sections:
          - id: analysis-source
            title: 分析来源
            instruction: |
              选一个：
              - Document-project 输出可用：{{path}}
              - 基于 IDE 的新分析
              - 用户提供的信息
          - id: current-state
            title: 当前项目状态
            instruction: |
              - 如果 document-project 输出存在：从"高级架构"和"技术总结"部分提取摘要
              - 否则：简单说说项目现在做什么，主要目的是啥
      - id: documentation-analysis
        title: 可用文档分析
        instruction: |
          如果跑过 document-project：
          - 注意："Document-project 分析可用 - 用现有技术文档"
          - 列出 document-project 创建的关键文档
          - 跳过下面的缺失文档检查

          否则，检查现有文档：
        sections:
          - id: available-docs
            title: 可用文档
            type: checklist
            items:
              - 技术栈文档 [[LLM: 如果来自 document-project，打勾 ✓]]
              - 源码树/架构 [[LLM: 如果来自 document-project，打勾 ✓]]
              - 编码标准 [[LLM: 如果来自 document-project，可能不完整]]
              - API 文档 [[LLM: 如果来自 document-project，打勾 ✓]]
              - 外部 API 文档 [[LLM: 如果来自 document-project，打勾 ✓]]
              - UX/UI 指南 [[LLM: 可能不在 document-project 中]]
              - 技术债务文档 [[LLM: 如果来自 document-project，打勾 ✓]]
              - '其他：{{other_docs}}'
            instruction: |
              - 如果已经跑过 document-project："用来自 document-project 输出的现有项目分析。"
              - 如果关键文档缺失且没有 document-project："我建议先跑 document-project 任务..."
      - id: enhancement-scope
        title: 增强范围定义
        instruction: 和用户一起明确这是什么类型的增强。这对范围和方法很关键。
        sections:
          - id: enhancement-type
            title: 增强类型
            type: checklist
            instruction: 和用户确定哪个适用
            items:
              - 新功能添加
              - 主要功能修改
              - 与新系统集成
              - 性能/可扩展性改进
              - UI/UX 大改
              - 技术栈升级
              - Bug 修复和稳定性改进
              - '其他：{{other_type}}'
          - id: enhancement-description
            title: 增强描述
            instruction: 2-3 句话说说用户想要添加或改变什么
          - id: impact-assessment
            title: 影响评估
            type: checklist
            instruction: 评估对现有代码库的影响范围
            items:
              - 最小影响（独立添加）
              - 中等影响（一些现有代码变更）
              - 重大影响（大量现有代码变更）
              - 主要影响（需要架构变更）
      - id: goals-context
        title: 目标和背景上下文
        sections:
          - id: goals
            title: 目标
            type: bullet-list
            instruction: 这个增强如果成功将交付的 1 行期望结果的要点列表
          - id: background
            title: 背景上下文
            type: paragraphs
            instruction: 1-2 个短段落解释为什么需要这个增强，它解决什么问题，以及它如何与现有项目配合
      - id: changelog
        title: 变更日志
        type: table
        columns: [变更, 日期, 版本, 描述, 作者]

  - id: requirements
    title: 需求
    instruction: |
      基于你对现有项目的验证理解起草功能和非功能需求。在展示需求之前，确认："这些需求基于我对你现有系统的理解。请仔细审查并确认它们与你项目的实际情况一致。"
    elicit: true
    sections:
      - id: functional
        title: 功能需求
        type: numbered-list
        prefix: FR
        instruction: 每个需求将是一个以 FR 开头的标识符的要点 markdown
        examples:
          - 'FR1: 现有 Todo List 将与新的 AI 重复检测服务集成，而不破坏当前功能。'
      - id: non-functional
        title: 非功能需求
        type: numbered-list
        prefix: NFR
        instruction: 每个需求将是一个以 NFR 开头的标识符的要点 markdown。包含来自现有系统的约束
        examples:
          - 'NFR1: 增强必须保持现有性能特征，内存使用量不超过当前使用量的 20%。'
      - id: compatibility
        title: 兼容性需求
        instruction: 对现有项目很关键 - 什么必须保持兼容
        type: numbered-list
        prefix: CR
        template: '{{requirement}}: {{description}}'
        items:
          - id: cr1
            template: 'CR1: {{existing_api_compatibility}}'
          - id: cr2
            template: 'CR2: {{database_schema_compatibility}}'
          - id: cr3
            template: 'CR3: {{ui_ux_consistency}}'
          - id: cr4
            template: 'CR4: {{integration_compatibility}}'

  - id: ui-enhancement-goals
    title: 用户界面增强目标
    condition: Enhancement includes UI changes
    instruction: 对于 UI 变更，捕获它们如何与现有 UI 模式和设计系统集成
    sections:
      - id: existing-ui-integration
        title: 与现有 UI 的集成
        instruction: 描述新的 UI 元素如何与现有设计模式、样式指南和组件库配合
      - id: modified-screens
        title: 修改/新的屏幕和视图
        instruction: 只列出将被修改或添加的屏幕/视图
      - id: ui-consistency
        title: UI 一致性需求
        instruction: 与现有应用程序保持视觉和交互一致性的具体要求

  - id: technical-constraints
    title: 技术约束和集成需求
    instruction: 这个部分替代单独的架构文档。从现有项目分析中收集详细的技术约束。
    sections:
      - id: existing-tech-stack
        title: 现有技术栈
        instruction: |
          如果 document-project 输出可用：
          - 从高级架构部分的"实际技术栈"表中提取
          - 包含版本号和任何注明的约束

          否则，记录当前技术栈：
        template: |
          **语言**：{{languages}}
          **框架**：{{frameworks}}
          **数据库**：{{database}}
          **基础设施**：{{infrastructure}}
          **外部依赖**：{{external_dependencies}}
      - id: integration-approach
        title: 集成方法
        instruction: 定义增强如何与现有架构集成
        template: |
          **数据库集成策略**：{{database_integration}}
          **API 集成策略**：{{api_integration}}
          **前端集成策略**：{{frontend_integration}}
          **测试集成策略**：{{testing_integration}}
      - id: code-organization
        title: 代码组织和标准
        instruction: 基于现有项目分析，定义新代码如何适应现有模式
        template: |
          **文件结构方法**：{{file_structure}}
          **命名约定**：{{naming_conventions}}
          **编码标准**：{{coding_standards}}
          **文档标准**：{{documentation_standards}}
      - id: deployment-operations
        title: 部署和运维
        instruction: 增强如何适应现有部署管道
        template: |
          **构建过程集成**：{{build_integration}}
          **部署策略**：{{deployment_strategy}}
          **监控和日志**：{{monitoring_logging}}
          **配置管理**：{{config_management}}
      - id: risk-assessment
        title: 风险评估和缓解
        instruction: |
          如果 document-project 输出可用：
          - 参考"技术债务和已知问题"部分
          - 包含可能影响增强的"变通方法和陷阱"
          - 注意"关键技术债务"中识别的任何约束

          构建包含现有已知问题的风险评估：
        template: |
          **技术风险**：{{technical_risks}}
          **集成风险**：{{integration_risks}}
          **部署风险**：{{deployment_risks}}
          **缓解策略**：{{mitigation_strategies}}

  - id: epic-structure
    title: Epic 和 Story 结构
    instruction: |
      对于现有项目，倾向于单个综合 epic，除非用户明确要求多个不相关的增强。在展示 epic 结构之前，确认："基于我对你现有项目的分析，我认为这个增强应该结构化为 [单个 epic/多个 epic]，因为 [基于实际项目分析的理由]。这与你对所需工作的理解一致吗？"
    elicit: true
    sections:
      - id: epic-approach
        title: Epic 方法
        instruction: 解释 epic 结构的理由 - 通常现有项目用单个 epic，除非有多个不相关的功能
        template: '**Epic 结构决策**：{{epic_decision}} 及理由'

  - id: epic-details
    title: 'Epic 1: {{enhancement_title}}'
    instruction: |
      在保持现有功能的同时交付现有项目增强的综合 epic

      现有项目的关键 Story 排序：
      - Story 必须确保现有功能保持完整
      - 每个 story 应该包含验证现有功能仍然有效的步骤
      - Story 应该排序以最小化对现有系统的风险
      - 为每个 story 包含回滚考虑
      - 专注于增量集成而不是大爆炸式变更
      - 为现有代码库上下文中的 AI 代理执行调整 story 大小
      - 必须：展示完整的 story 序列并问："这个 story 序列旨在最小化对你现有系统的风险。考虑到你项目的架构和约束，这个顺序合理吗？"
      - Story 必须是逻辑顺序的，明确识别依赖关系
      - 每个 story 必须在保持系统完整性的同时交付价值
    template: |
      **Epic 目标**：{{epic_goal}}

      **集成需求**：{{integration_requirements}}
    sections:
      - id: story
        title: 'Story 1.{{story_number}} {{story_title}}'
        repeatable: true
        template: |
          作为 {{user_type}}，
          我希望 {{action}}，
          以便 {{benefit}}。
        sections:
          - id: acceptance-criteria
            title: 验收标准
            type: numbered-list
            instruction: 定义包含新功能和现有系统完整性的标准
            item_template: '{{criterion_number}}: {{criteria}}'
          - id: integration-verification
            title: 集成验证
            instruction: 确保现有功能保持完整的特定验证步骤
            type: numbered-list
            prefix: IV
            items:
              - template: 'IV1: {{existing_functionality_verification}}'
              - template: 'IV2: {{integration_point_verification}}'
              - template: 'IV3: {{performance_impact_verification}}'
